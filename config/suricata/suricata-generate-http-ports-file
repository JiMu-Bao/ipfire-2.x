#!/usr/bin/perl
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2012 IPFire Development Team <info@ipfire.org>                #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

use strict;

require '/var/ipfire/general-functions.pl';
require "${General::swroot}/ids-functions.pl";

exit unless(-f $IDS::ids_settings_file and -f $IDS::rules_settings_file);

#
## Step 1: Generate and write the HTTP ports file.
#

# Call subfunction to generate the HTTP ports file.
&IDS::generate_http_ports_file();

# Set correct ownership.
&IDS::set_ownership("$IDS::http_ports_file");

#
## Step 2: Restart suricata if necessary.
#

# Check if the IDS should be started.
if(&IDS::ids_is_running()) {
	# Call suricatactrl and reload the rules.
	&IDS::call_suricatactrl("restart");
}
