#!/bin/sh
###############################################################################
#                                                                             #
# IPFire.org - A linux based firewall                                         #
# Copyright (C) 2007-2024  IPFire Team  <info@ipfire.org>                     #
#                                                                             #
# This program is free software: you can redistribute it and/or modify        #
# it under the terms of the GNU General Public License as published by        #
# the Free Software Foundation, either version 3 of the License, or           #
# (at your option) any later version.                                         #
#                                                                             #
# This program is distributed in the hope that it will be useful,             #
# but WITHOUT ANY WARRANTY; without even the implied warranty of              #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
# GNU General Public License for more details.                                #
#                                                                             #
# You should have received a copy of the GNU General Public License           #
# along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                             #
###############################################################################

. /etc/sysconfig/rc
. $rc_functions

eval $(/usr/local/bin/readhash /var/ipfire/ethernet/settings)

# Create chroot directory for wsdd
mkdir -p /var/run/wsdd

PIDFILE="/var/run/wsdd.pid"

INTERFACES="--interface ${GREEN_DEV}"
if [ -n "${BLUE_DEV}" ]; then
        INTERFACES="${INTERFACES} --interface ${BLUE_DEV}"
fi
WSDD_WORKGROUP="--workgroup $(/usr/bin/testparm -s --parameter-name workgroup 2>/dev/null)"
WSDD_USER="--user wsdd:wsdd"
WSDD_CHROOT="--chroot /var/run/wsdd"

case "$1" in
	start)
		boot_mesg "Starting wsdd daemon..."
		loadproc -b -p "${PIDFILE}" /usr/bin/wsdd --ipv4only ${WSDD_USER} ${INTERFACES} ${WSDD_WORKGROUP} ${WSDD_CHROOT}
		;;

	stop)
		boot_mesg "Stopping wsdd daemon..."
		killproc -p "${PIDFILE}" /usr/bin/wsdd
		;;

	status)
		statusproc /usr/bin/wsdd
		;;

	*)
		echo "Usage: $0 (start|stop|status)"
		exit 1
		;;
esac

